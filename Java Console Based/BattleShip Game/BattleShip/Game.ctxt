#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ This\ class\ act\ as\ a\ client\ class\ \ with\ all\ the\ main\ methods\ to\ start\ the\ application\r\n\r\n\ @author\ ARVIND\ YOGESH\ ATTUR\ RAMESH\r\n\ @version\ 20th\ OCTOBER\ 2018\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Game\r\n
comment10.params=gridWidthHeight\ shipSize\ multipleHitsNeeded\ compShipVisible
comment10.target=void\ printHeading(int,\ int,\ boolean,\ boolean)
comment10.text=\r\n\ This\ method\ prints\ the\ introductory\ display\ of\ the\ game\r\n\ @param\ gridWidthHeight\ determines\ the\ height\ and\ width\ of\ the\ grid\r\n\ @param\ multipleHitsNeeded\ determines\ whether\ multiple\ hits\ need\ to\ be\ true/false\r\n\ @param\ computerShipVisible\ determines\ whether\ the\ computer\ ships\ can\ be\ visible\ to\ the\ player\r\n\ @param\ shipSize\ determines\ the\ size\ of\ the\ ships\r\n
comment11.params=localPlayerShipList\ shipSize\ gridWidthHeight\ multipleHitsNeeded
comment11.target=void\ callPlayerShip(ShipList,\ int,\ int,\ boolean)
comment11.text=\r\n\ Calls\ the\ player\ ship\ to\ enter\ the\ player\ ship\ details\r\n\ @param\ localPlayerShipList\ sends\ the\ playerShips\ object\ to\ store\ the\ ship\ list\ details\r\n\ @param\ shipSize\ sends\ the\ size\ of\ the\ ship\r\n\ @param\ gridWidthHeight\ sends\ grid\ width\ and\ height\ of\ the\ ship\r\n\ @param\ multipleHitsNeeded\ pass\ the\ boolean\ values\ of\ multiple\ hits\ needed\ (true/false)\r\n
comment12.params=localPlayerShipList\ shipSize\ gridWidthHeight\ multipleHitsNeeded
comment12.target=void\ genericPlayerShip(ShipList,\ int,\ int,\ int)
comment12.text=\r\n\ Allows\ the\ player\ to\ enter\ their\ ship\ details\r\n\ @param\ localPlayerShipList\ sends\ the\ playerShips\ object\ to\ store\ the\ ship\ details\r\n\ @param\ shipSize\ sends\ the\ size\ of\ the\ ship\r\n\ @param\ gridWidthHeight\ sends\ grid\ width\ and\ height\ of\ the\ ship\r\n\ @param\ multipleHitsNeeded\ pass\ the\ boolean\ values\ of\ multiple\ hits\ needed\ (true/false)\r\n
comment13.params=localComputershipList\ shipSize\ gridWidthHeight\ multipleHitsNeeded
comment13.target=void\ callComputerShip(ShipList,\ int,\ int,\ boolean)
comment13.text=\r\n\ Calls\ the\ computer\ ship\ to\ randomly\ enter\ the\ computer\ ship\ details\r\n\ @param\ localPlayerShipList\ sends\ the\ computerShips\ object\ to\ store\ the\ ship\ list\ details\r\n\ @param\ shipSize\ sends\ the\ size\ of\ the\ ship\r\n\ @param\ gridWidthHeight\ sends\ grid\ width\ and\ height\ of\ the\ ship\r\n\ @param\ multipleHitsNeeded\ pass\ the\ boolean\ values\ of\ multiple\ hits\ needed\ (true/false)\r\n
comment14.params=localComputershipList\ shipSize\ gridWidthHeight\ multipleHitsNeeded
comment14.target=void\ genericComputerShip(ShipList,\ int,\ int,\ int)
comment14.text=\r\n\ Allows\ the\ computer\ to\ enter\ their\ ship\ details\ randomly\r\n\ @param\ localPlayerShipList\ sends\ the\ computerShips\ object\ to\ store\ the\ ship\ details\r\n\ @param\ shipSize\ sends\ the\ size\ of\ the\ ship\r\n\ @param\ gridWidthHeight\ sends\ grid\ width\ and\ height\ of\ the\ ship\r\n\ @param\ multipleHitsNeeded\ pass\ the\ boolean\ values\ of\ multiple\ hits\ needed\ (true/false)\r\n
comment15.params=
comment15.target=int\ generateRandomMultipleHitsNeeded()
comment15.text=\r\n\ This\ method\ generates\ the\ random\ number\ for\ multiple\ hits\ needed\ variable\r\n\ @return\ returns\ a\ random\ number\r\n
comment16.params=gridWidthHeight
comment16.target=int\ computerRandomPos(int)
comment16.text=\r\n\ This\ method\ generates\ the\ random\ position\ for\ the\ computer\ ships\r\n\ This\ method\ handles\ both\ x\ and\ y\ position\ of\ the\ computer\ ships\r\n\ @param\ gridWidthHeight\ pass\ grid\ width\ and\ height\ as\ a\ range\ for\ the\ computer\ ships\r\n\ @return\ returns\ a\ random\ number\r\n
comment17.params=localShipList\ randomXPostion\ randomYPosition
comment17.target=boolean\ checkShipCoordinate(ShipList,\ int,\ int)
comment17.text=\r\n\ This\ method\ checks\ the\ ship\ coordinates\ x\ and\ y\ with\ the\ previous\ ships\r\n\ This\ method\ is\ common\ for\ both\ player\ and\ computer\ ships\ \r\n\ @param\ localShipList\ can\ be\ playerShips/computerShips\ object\ to\ call\ their\ respective\ ships\r\n\ @param\ randomXPostion\ pass\ x\ position\ of\ the\ particular\ ship\r\n\ @param\ randomYPosition\ pass\ y\ position\ of\ the\ particular\ ship\r\n\ @return\ returns\ true\ if\ coordinates\ matches\ with\ previous\ ship\ coordinates\ else\ false\r\n
comment18.params=localShipList\ particularShipCount
comment18.target=java.lang.String\ getParticularShipName(ShipList,\ int)
comment18.text=\r\n\ This\ method\ returns\ the\ current\ ship\ name\ of\ the\ particular\ ship\r\n\ @param\ localShipList\ can\ be\ playerShip/computerShip\ object\r\n\ @param\ particularShipCount\ pass\ the\ array\ list\ index\ of\ the\ particular\ ship\r\n\ @return\ returns\ the\ particular\ ship\ name\r\n
comment19.params=localShipList\ particularShipCount
comment19.target=int\ getParticularShipXPosition(ShipList,\ int)
comment19.text=\r\n\ This\ method\ returns\ the\ current\ X\ position\ of\ the\ particular\ ship\r\n\ @param\ localShipList\ can\ be\ playerShip/computerShip\ object\r\n\ @param\ particularShipCount\ pass\ the\ array\ list\ index\ of\ the\ particular\ ship\r\n\ @return\ returns\ the\ value\ of\ particular\ ship\ x\ position\ \r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ This\ method\ starts\ the\ application\ to\ play\r\n
comment20.params=localShipList\ particularShipCount
comment20.target=int\ getParticularShipYPosition(ShipList,\ int)
comment20.text=\r\n\ This\ method\ returns\ the\ current\ Y\ position\ of\ the\ particular\ ship\r\n\ @param\ localShipList\ can\ be\ playerShip/computerShip\ object\r\n\ @param\ particularShipCount\ pass\ the\ array\ list\ index\ of\ the\ particular\ ship\r\n\ @return\ returns\ the\ value\ of\ particular\ ship\ X\ position\ \r\n
comment21.params=localShipList\ particularShipCount
comment21.target=int\ getParticularShipNoOfHitsNeeded(ShipList,\ int)
comment21.text=\r\n\ This\ method\ returns\ the\ current\ number\ of\ hits\ needed\ for\ the\ particular\ ship\r\n\ @param\ localShipList\ can\ be\ playerShip/computerShip\ object\r\n\ @param\ particularShipCount\ pass\ the\ array\ list\ index\ of\ the\ particular\ ship\r\n\ @return\ returns\ the\ value\ of\ current\ number\ of\ hits\ needed\ \r\n
comment22.params=localShipList\ particularShipCount
comment22.target=int\ getParticularShipNoOfHitsMade(ShipList,\ int)
comment22.text=\r\n\ This\ method\ returns\ the\ current\ number\ of\ hits\ made\ for\ the\ particular\ ship\r\n\ @param\ localShipList\ can\ be\ playerShip/computerShip\ object\r\n\ @param\ particularShipCount\ pass\ the\ array\ list\ index\ of\ the\ particular\ ship\r\n\ @return\ returns\ the\ value\ of\ current\ number\ of\ hits\ needed\ \r\n
comment23.params=newPlayerShips
comment23.target=void\ setPayerShips(ShipList)
comment23.text=\r\n\ This\ method\ sets\ the\ new\ player\ ship\r\n\ @param\ newPlayerShips\ pass\ new\ player\ ship\ details\r\n
comment24.params=
comment24.target=ShipList\ getPlayerShips()
comment24.text=\r\n\ This\ method\ returns\ the\ player\ ship\ details\r\n\ @return\ returns\ the\ player\ ship\ details\r\n
comment25.params=newComputerShips
comment25.target=void\ setComputerShips(ShipList)
comment25.text=\r\n\ This\ method\ sets\ the\ new\ computer\ ship\r\n\ @param\ newComputerShips\ pass\ new\ computer\ ship\ details\r\n
comment26.params=
comment26.target=ShipList\ getComputerShips()
comment26.text=\r\n\ This\ method\ returns\ the\ computer\ ship\ details\r\n\ @return\ returns\ the\ computer\ ship\ details\r\n
comment3.params=gridWidthHeight\ multipleHitsNeeded\ computerShipVisible
comment3.target=void\ playGame(int,\ boolean,\ boolean)
comment3.text=\r\n\ This\ method\ plays\ the\ game,\ once\ it\ ends,\ it\ writes\ the\ results\ to\ the\ text\ file.\r\n\ @param\ gridWidthHeight\ determines\ the\ height\ and\ width\ of\ the\ grid\r\n\ @param\ multipleHitsNeeded\ determines\ whether\ multiple\ hits\ need\ to\ be\ true/false\r\n\ @param\ computerShipVisible\ determines\ whether\ the\ computer\ ships\ can\ be\ visible\ to\ the\ player\r\n
comment4.params=localShipList\ gridWidthHeight\ score
comment4.target=int\ inputPlayerGrid(ShipList,\ int,\ int)
comment4.text=\r\nThis\ method\ gets\ the\ computers\ ship\ details\ and\ \r\nmakes\ the\ player\ to\ play\ and\ the\ score\ will\ also\ be\ updated\ \ \r\n\ \r\n\ @param\ localShipList\ can\ be\ computerShips\ to\ retrieve\ the\ respective\ ship\ list\ details\r\n\ @param\ gridWidthHeight\ is\ passed\ as\ a\ parameter\ to\ mentions\ X\ and\ Y\ position\ range\r\n\ @param\ score\ will\ be\ updated\ for\ player\ based\ on\ their\ hits\ \r\n\ @return\ returns\ the\ final\ score\ of\ the\ player.\r\n
comment5.params=localShipList\ gridWidthHeight\ score
comment5.target=int\ inputComputerGrid(ShipList,\ int,\ int)
comment5.text=\r\n\ This\ method\ gets\ the\ player\ ship\ details\ and\r\n\ makes\ the\ computer\ to\ play\ and\ the\ score\ will\ also\ be\ updated\r\n\ \r\n\ @param\ localShipList\ can\ be\ playerShips\ to\ retrieve\ the\ respective\ ship\ list\ details\r\n\ @param\ gridWidthHeight\ is\ passed\ as\ a\ parameter\ to\ mentions\ X\ and\ Y\ position\ range\r\n\ @param\ score\ \ will\ be\ updated\ for\ the\ computer\ based\ on\ their\ hits\ \r\n\ @return\ \ returns\ the\ final\ score\ of\ the\ computer\r\n
comment6.params=localShipList
comment6.target=boolean\ checkShipDestroyed(ShipList)
comment6.text=\r\n\ This\ method\ checks\ whether\ the\ particular\ ship\ is\ destroyed\ or\ not,\r\n\ it\ is\ applicable\ for\ both\ the\ player\ and\ computer\ ships\r\n\ \r\n\ @param\ localShipList\ can\ be\ player/computer\ ship\ list\r\n\ @return\ returns\ true\ if\ destroyed,\ else\ false\r\n
comment7.params=localShipList\ randomXPostion\ randomYPosition
comment7.target=boolean\ hitShipCoordinate(ShipList,\ int,\ int)
comment7.text=\r\n\ This\ method\ checks\ whether\ the\ player/computer\ hits\ their\ ships\ each\ other\r\n\ This\ method\ can\ be\ used\ by\ both\ player\ and\ computer.\r\n\ \r\n\ @param\ localShipList\ can\ be\ player/computer\ ship\ list\r\n\ @param\ randomXPostion\ gets\ the\ respective\ x-position\ from\ player/computer\r\n\ @param\ randomYPosition\ gets\ the\ respective\ y-position\ from\ player/computer\ \r\n\ @return\ returns\ true\ if\ hits\ the\ particular\ ship,\ else\ false\r\n
comment8.params=localShipList\ gridWidthHeight\ multipleHitsNeeded\ shipVisible
comment8.target=void\ initGrid(ShipList,\ int,\ boolean,\ boolean)
comment8.text=\r\n\ This\ method\ initializes\ the\ grid\ and\ it\ is\ a\ common\ grid\ for\ both\ player\ and\ computer\r\n\ Each\ ship\ coordinates\ go\ and\ sits\ to\ their\ respective\ position\ in\ the\ grid\r\n\ @param\ localShipList\ can\ player/computer\ ship\ list\r\n\ @param\ gridWidthHeight\ determines\ the\ grid\ width\ and\ height\r\n\ @param\ multipleHitsNeeded\ determines\ whether\ multiple\ hits\ need\ to\ be\ true/false\r\n\ @param\ shipVisible\ determines\ whether\ the\ ships\ need\ to\ be\ visible\ to\ the\ player\ and\ computer\ each\ other\r\n
comment9.params=getGrid\ gridWidthHeight
comment9.target=void\ displayGrid(java.util.ArrayList,\ int)
comment9.text=\r\n\ A\ common\ method\ for\ both\ player\ and\ computer\ to\ display\ their\ respective\ grid\r\n\ @param\ getGrid\ sends\ the\ player/computer\ grid\ list\ respectively\r\n\ @param\ gridWidthHeight\ determines\ the\ grid\ width\ and\ height\ of\ the\ player/computer\r\n
numComments=27
